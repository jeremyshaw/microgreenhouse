/*	CpE 185 Final Project
	Author: Wesley Nguyen
	Last Modified: May 4, 2018 */

#include <Servo.h>
#include <Wire.h>

//fanServoSlave Address on I2C
#define sAddr 12
Servo servo;

//Pin setups; not touched by Pi
const int fanPinPWM = 3;
const int relayPin = 4;
//const int speedValPin = A3;								//Used to allow the 4-pin PWM fan to work
const int servoPin = 9;


//Predefined servo states/fan speeds; not touched by Pi
//Servo values
const int closedVent = 0;
const int partOpenVent = 90;
const int fullOpenVent = 180;
//Fan values
const int offSpeed = 0;
const int slowSpeed = 50;
const int medSpeed = 150;
const int highSpeed = 255;

//Variables passed from Pi
const int toggleVal = 4;
int userInput;
int fanSpeed = 0;

//Variables manipulated only by slave
int fanState;
boolean ventState = false;



void setup()
{
	pinMode(relayPin, OUTPUT);
    pinMode(speedValPin, INPUT);
	digitalWrite(relayPin, HIGH);
	fanState = digitalRead(relayPin);
	servo.attach(servoPin);
  
    Wire.begin(sAddr);
    Wire.onReceive(receiveData);
    Wire.onRequest(sendData);
    
	Serial.begin(9600);
}


void loop()
{
    fanPWM();
    ventControl();
	delay(10);
}


void receiveData(int byteCount)
{
	while(Wire.available())
	{
		userInput = Wire.read();
		if (userInput == toggleVal)
		{
			fanState = digitalRead(relayPin);
			if (fanState == HIGH)
            {
				digitalWrite(relayPin, LOW);
            }
			else if (fanState == LOW)
            {
				digitalWrite(relayPin, HIGH);
            }
			fanState = digitalRead(relayPin);
		}
		else
        {
			fanSpeed = userInput;
        }
	}
}


//Send fanState, fanSpeed, and ventState back to the Pi; messages are sent as strings(not sure on this part)
void sendData()
{
	if (fanState == LOW)
	{
		Wire.write("ON");
		switch (fanSpeed)
		{
			case 1:
				Wire.write("LOW");
				break;
			case 2:
				Wire.write("MEDIUM");
				break;
			default:
				Wire.write("HIGH");
		}
	}
	else
		Wire.write("OFF");
	
	if (ventState == true)
		Wire.write("OPEN");
	else
		Wire.write("CLOSED");
}


//Manipulates the fanspeed
void fanPWM()
{
	if (fanState == LOW)
	{
		switch (fanSpeed)
		{
			case 0:
				analogWrite(fanPinPWM, offSpeed);
				ventState = false;
				break;
			case 1:
				analogWrite(fanPinPWM, slowSpeed);
				ventState = true;
				break;
			case 2:
				analogWrite(fanPinPWM, medSpeed);
				ventState = true;
				break;
			default:
				analogWrite(fanPinPWM, highSpeed);
				ventState = true;
		}
	}
	else
	{
		analogWrite(fanPinPWM, offSpeed);
		ventState = false;
	}
}


//Manipulates the servo controlling the vent; is closed when the fan is not in operation
void ventControl()
{
	if (ventState == 1)
	{
		if (fanSpeed == 1 || fanSpeed == 2)
			servo.write(partOpenVent);
		else if (fanSpeed == 3)
			servo.write(fullOpenVent);
	}
	else
		servo.write(0);
}
